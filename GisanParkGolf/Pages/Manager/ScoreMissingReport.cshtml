@page
@model GisanParkGolf.Pages.Manager.ScoreMissingReportModel
@{
    ViewData["Title"] = "점수 입력 누락 현황";
}

@await Html.PartialAsync("Shared/Components/_HeaderCard", (
    ViewData["Title"] as string ?? "제목 없음",
    "선택한 대회(또는 전체)의 스코어 입력이 누락된 참가자 목록을 확인하고 바로 점수 입력 페이지로 이동하세요."
))

<div class="container mt-4">
    <div class="custom-card mb-4" style="margin-left:auto;margin-right:auto;">
        <form method="get" class="row gx-2 align-items-center mb-3">
            <div class="col-auto">
                <label for="gameCode" class="fw-bold" style="color:#215d21;">대회 선택</label>
            </div>
            <div class="col-auto">
                <select id="gameCode" name="SelectedGameCode" class="form-select" style="min-width:250px;">
                    <option value="">-- 전체 경기에 대해 조회 --</option>
                    @foreach (var game in Model.GameList)
                    {
                        <option value="@game.GameCode" selected="@(Model.SelectedGameCode == game.GameCode ? "selected" : null)">
                            @game.GameName (@game.GameCode)
                        </option>
                    }
                </select>
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary px-4">조회</button>
            </div>
            <div class="col-auto">
                <a class="btn btn-outline-secondary" href="@Url.Page("/Manager/ScoreMissingReport", new { SelectedGameCode = Model.SelectedGameCode })">새로고침</a>
            </div>
        </form>

        @if (Model.MissingScoreList == null || !Model.MissingScoreList.Any())
        {
            <div class="alert alert-success text-center my-5" role="alert" style="font-size:1.15em;">
                모든 팀/참가자의 점수가 정상적으로 입력되었습니다.
            </div>
        }
        else
        {
            <div class="alert alert-danger text-center">
                <strong>경고:</strong> 총 <strong>@Model.MissingScoreList.Count</strong>명의 참가자가 점수 입력이 누락되었습니다.
            </div>

            <div class="alert alert-info mb-3">
                <strong>안내:</strong> 아래 목록은 스코어 입력이 누락된 참가자(팀)입니다. 링크를 눌러 점수 입력 화면으로 이동하세요.
            </div>

            <div class="table-responsive">
                <table class="table table-bordered align-middle" style="background:#f9fafb;">
                    <thead class="table-light">
                        <tr>
                            <th style="width:50px;">#</th>
                            <th style="width:120px;">게임코드</th>
                            <th style="min-width:220px;">대회명</th>
                            <th style="width:90px;">팀번호</th>
                            <th style="width:140px;">참가자명</th>
                            <th style="width:120px;">참가자ID</th>
                            <th style="min-width:240px;">미입력 코스/홀</th>
                            <th style="width:140px;">동작</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.MissingScoreList.Count; i++)
                        {
                            var item = Model.MissingScoreList[i];
                            <tr class="@(item.MissingCoursesAndHoles != null && item.MissingCoursesAndHoles.Any() ? "table-danger" : "")">
                                <th scope="row">@(@i + 1)</th>
                                <td>@item.GameCode</td>
                                <td>@item.GameName</td>
                                <td>@item.TeamNumber</td>
                                <td>@item.UserName</td>
                                <td>@item.UserId</td>
                                <td>
                                    @if (item.MissingCoursesAndHoles != null && item.MissingCoursesAndHoles.Any())
                                    {
                                        var groupedHoles = item.MissingCoursesAndHoles
                                            .GroupBy(h => h.Split('-')[0]) // 코스 이름(A, B 등)으로 그룹화
                                            .ToDictionary(g => g.Key, g => g.ToList());

                                        <!-- 툴팁으로 간략히 표시 -->
                                        <span class="text-danger fw-bold" data-bs-toggle="tooltip" title="@string.Join(", ", item.MissingCoursesAndHoles)">
                                            @item.MissingCoursesAndHoles.Count 개 누락
                                        </span>

                                        <!-- 모달 팝업 트리거 -->
                                        <a href="#" class="text-primary ms-2" data-bs-toggle="modal" data-bs-target="#missingModal-@item.UserId">
                                            상세보기
                                        </a>

                                        <!-- 모달 팝업 -->
                                        <div class="modal fade" id="missingModal-@item.UserId" tabindex="-1" aria-labelledby="missingModalLabel-@item.UserId" aria-hidden="true">
                                            <div class="modal-dialog modal-dialog-centered"> <!-- 화면 가운데 정렬 -->
                                                <div class="modal-content shadow-lg border-0"> <!-- 약간의 그림자와 테두리 제거 -->
                                                    <div class="modal-header bg-light">
                                                        <h5 class="modal-title text-primary" id="missingModalLabel-@item.UserId">누락된 코스/홀 상세</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <ul class="list-unstyled">
                                                            @foreach (var group in groupedHoles)
                                                            {
                                                                <li>
                                                                    <strong>@group.Key 코스:</strong>
                                                                    @string.Join(", ", group.Value.Select(h => {
                                                                        var holeNumber = h.Split('-')[1];
                                                                        holeNumber = holeNumber.Replace("번 홀", ""); // 중복 방지
                                                                        return holeNumber + "홀";
                                                                    }))
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <div class="modal-footer bg-light">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <a asp-page="/Manager/TeamScoreInput"
                                       asp-route-GameCode="@item.GameCode"
                                       asp-route-TeamNumber="@item.TeamNumber"
                                       asp-route-HighlightUserId="@item.UserId"
                                       class="btn btn-sm btn-primary">
                                        점수 입력 바로가기
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
            new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });
</script>