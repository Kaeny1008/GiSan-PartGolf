@page
@model GisanParkGolf_Core.Pages.AdminPage.PlayerManagementModel
@using GisanParkGolf_Core.Extensions
@{
    ViewData["Title"] = "선수 정보관리";
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // 페이지 크기 변경 시 자동으로 폼 제출
            document.getElementById('pageSizeSelect').addEventListener('change', function () {
                this.form.submit();
            });
        });
    </script>
}

<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="successModalLabel">알림</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="successModalBody">
                <!-- 여기에 성공 메시지 -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">확인</button>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    @await Html.PartialAsync("Shared/Components/_HeaderCard", (ViewData["Title"] as string ?? "제목 없음"
        , "선수의 정보를 수정합니다."))

    <div class="custom-card">
        <div class="card-header py-3">
            <div class="d-flex justify-content-end align-items-stretch">
                <div>
                    <a asp-page-handler="Excel"
                       asp-route-SearchField="@Model.SearchField"
                       asp-route-SearchQuery="@Model.SearchQuery"
                       asp-route-ReadyUserOnly="@Model.ReadyUserOnly"
                       class="btn btn-success btn-sm">엑셀 저장</a>
                </div>
                <!-- 전체 승인 버튼 (모달 트리거) -->
                <button type="button" class="btn btn-warning btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#approveAllModal">
                    전체 승인
                </button>

                <!-- 전체 승인 확인 모달 -->
                <div class="modal fade" id="approveAllModal" tabindex="-1" aria-labelledby="approveAllModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <form method="post" asp-page-handler="ApproveAll" class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title fw-bold" id="approveAllModalLabel">전체 승인 확인</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                            </div>
                            <div class="modal-body">
                                <p class="mb-0">정말 <span class="fw-bold text-danger">승인대기</span>인 모든 사용자를<br> <span class="fw-bold text-warning">한 번에 승인</span>하시겠습니까?</p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                <button type="submit" class="btn btn-warning">승인</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <!-- 필터 및 버튼 영역 -->
            @{
                var searchModel = new GisanParkGolf_Core.Pages.Shared.SearchControlModel
                {
                    PageSize = Model.PageSize,
                    SearchField = Model.SearchField,
                    SearchQuery = Model.SearchQuery,
                    ResetPageName = "./PlayerManagement",
                    FieldOptions = new List<GisanParkGolf_Core.Pages.Shared.SearchFieldOption>
                    {
                        new() { Value = "UserName", Text = "이름" },
                        new() { Value = "UserId", Text = "아이디" },
                        new() { Value = "ReadyUserOnly", Text = "승인자만" }
                    },
                    ShowReadyUserCheckbox = true,
                    ReadyUserChecked = Model.ReadyUserOnly
                };
            }
            @await Html.PartialAsync("_SearchControl", searchModel)

            <div class="table-responsive mt-2">
                <table class="table my-0 table-striped table-hover table-modern">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>아이디</th>
                            <th>이름</th>
                            <th>상태</th>
                            <th>권한</th>
                            <th>등록일</th>
                            <th>관리</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Players != null && Model.Players.Any())
                        {
                            var rowNum = (Model.Players.PageIndex - 1) * Model.PageSize + 1;
                            @foreach (var user in Model.Players)
                            {
                                <tr>
                                    <td>@(rowNum++)</td>
                                    <td>@user.UserId</td>
                                    <td>@user.UserName</td>
                                    <td>@user.UserWClass</td>
                                    <td>@user.UserClass.ToRoleName()</td>
                                    <td>@user.UserRegistrationDate.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        <a asp-page="./EditPlayer" asp-route-id="@user.UserId" class="btn btn-sm btn-info">수정</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center text-muted p-4">
                                    ⚠️ 현재 조건에 맞는 선수가 없습니다.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- 페이지네이션 컨트롤 -->
            @{
                var pagemodel = new GisanParkGolf_Core.Pages.Shared.PaginationModel
                {
                    PageIndex = Model.PageIndex,
                    TotalPages = Model.Players?.TotalPages ?? 1,
                    GetPageUrl = i => Url.Page(
                    "./PlayerManagement",
                    null,
                    new
                    {
                        SearchField = Model.SearchField,
                        SearchQuery = Model.SearchQuery,
                        PageIndex = i,
                        PageSize = Model.PageSize
                    }, null) ?? ""
                };
            }
            @await Html.PartialAsync("_Pagination", pagemodel)
        </div>
    </div>
</div>