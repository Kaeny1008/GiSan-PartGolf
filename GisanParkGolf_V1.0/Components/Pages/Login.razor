@page "/Login"
@using System.ComponentModel.DataAnnotations
@using GisanParkGolf_V1._0.Components.Layout
@inject NavigationManager Navigation

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container d-flex justify-content-center align-items-center" style="min-height: 70vh;">
        <div class="custom-card">
            <div class="w-100" style="max-width: 480px;">
                <!-- 알림 메시지 -->
                <div class="alert alert-primary shadow-sm rounded text-center mb-4">
                    <div class="d-flex align-items-center justify-content-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor"
                            class="bi bi-exclamation-triangle-fill text-primary me-2" viewBox="0 0 16 16">
                            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 
                            1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 
                            5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 
                            0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 
                            1 1 0 0 1 0-2z" />
                        </svg>
                        <h5 class="mb-0 fw-bold">로그인이 필요합니다</h5>
                    </div>
                    <p class="mt-2 mb-0">아이디와 비밀번호를 입력하신 후 로그인을 진행해주세요.</p>
                </div>

                <!-- 아이디 -->
                <div class="d-flex justify-content-center mb-0">
                    <div class="input-group" style="width: 360px;">
                        <span class="input-group-text" id="basic-addon-id" style="width:80px;">ID</span>
                        <InputText id="txtUserID" class="form-control" @bind-Value="loginModel.UserID"
                            placeholder="아이디를 입력하세요" aria-describedby="basic-addon-id" />
                    </div>
                </div>

                <!-- 비밀번호 -->
                <div class="d-flex justify-content-center mb-0 mt-2">
                    <div class="input-group" style="width: 360px;">
                        <span class="input-group-text" id="basic-addon-pw" style="width:80px;">PW</span>
                        <InputText id="txtPassword" class="form-control" @bind-Value="loginModel.Password"
                            placeholder="비밀번호를 입력하세요" aria-describedby="basic-addon-pw"
                            type="password" />
                    </div>
                </div>

                <div style="height: 32px;"></div>

                <!-- 버튼 영역 -->
                <div class="d-flex justify-content-center mb-3" style="gap:10px;">
                    <button type="submit" class="btn btn-primary" style="width:160px;">로그인</button>
                    <button type="button" class="btn btn-outline-secondary" style="width:160px;" @onclick="GoRegister">회원가입</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

<ResultModal @ref="validationModal" />

@code {
    private LoginModel loginModel = new();
    private ResultModal? validationModal;

    public class LoginModel
    {
        [Required(ErrorMessage = "ID를 입력하여 주십시오.")]
        public string? UserID { get; set; }

        [Required(ErrorMessage = "비밀번호를 입력하여 주십시오.")]
        public string? Password { get; set; }
    }

    private async Task HandleLogin()
    {
        // TODO: 실제 로그인 처리 구현 (예: DB 연동)
        if (loginModel.UserID == "admin" && loginModel.Password == "1234")
        {
            validationModal?.Show("로그인 성공!", "알림");
            // Navigation.NavigateTo("/"); // 로그인 성공시 이동
        }
        else
        {
            validationModal?.Show("ID 또는 비밀번호가 올바르지 않습니다.", "입력 오류 발생");
        }
        await Task.CompletedTask;
    }

    private void GoRegister()
    {
        Navigation.NavigateTo("/Register");
    }
}