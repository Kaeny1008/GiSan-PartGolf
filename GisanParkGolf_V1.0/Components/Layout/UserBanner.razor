@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation

<div class="container mt-1">
    <div class="card-welcome d-flex flex-wrap align-items-center gap-3">
        <div class="d-flex align-items-center gap-2">
            <span>@(userName)님, 반갑습니다.</span>
        </div>
        <div class="d-flex align-items-center gap-2">
            @if (isAuthenticated)
            {
                <button class="btn btn-outline-danger btn-sm" @onclick="Logout">로그아웃</button>
                <button class="btn btn-outline-secondary btn-sm" @onclick="UserModify">정보수정</button>
            }
            else
            {
                <button class="btn btn-outline-primary btn-sm" @onclick="Login">로그인</button>
            }
        </div>
    </div>
</div>

@code {
    private bool isAuthenticated;
    private string userName = "손님";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        userName = user.Identity?.Name ?? "손님";
    }

    void Login() => Navigation.NavigateTo("/Login");
    void Logout() => Navigation.NavigateTo("/Sites/Login/Logout");
    void UserModify() => Navigation.NavigateTo("/Sites/UserManagement/User%20Modify");
}