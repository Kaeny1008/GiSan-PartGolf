@page
@model GisanParkGolf_Core.Pages.Admin.PlayerManagementModel
@using GisanParkGolf_Core.Extensions
@{
    ViewData["Title"] = "선수 정보관리";
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // 페이지 크기 변경 시 자동으로 폼 제출
            document.getElementById('pageSizeSelect').addEventListener('change', function () {
                this.form.submit();
            });
        });
    </script>
}

<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="successModalLabel">알림</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="successModalBody">
                <!-- 여기에 성공 메시지 -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">확인</button>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="mb-3 text-center">
        <h4 class="fw-bold mb-2">선수 정보관리</h4>
        <p class="text-muted" style="font-size: 0.95rem;">선수의 정보를 수정합니다.</p>
    </div>

    <div class="custom-card">
        <div class="card-header py-3">
            <div class="d-flex justify-content-end align-items-stretch">
                <div>
                    <a asp-page-handler="Excel"
                       asp-route-SearchField="@Model.SearchField"
                       asp-route-SearchQuery="@Model.SearchQuery"
                       asp-route-ReadyUserOnly="@Model.ReadyUserOnly"
                       class="btn btn-success btn-sm">엑셀 저장</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <!-- ★★★★★ 변경점: 검색 컴포넌트 대신 필터들을 직접 배치 ★★★★★ -->
            <form method="get" class="d-flex flex-wrap align-items-center gap-2 mb-3">
                <select name="PageSize" id="pageSizeSelect" class="form-select" style="width: auto;" asp-for="PageSize">
                    <option value="10">10개씩 보기</option>
                    <option value="25">25개씩 보기</option>
                    <option value="50">50개씩 보기</option>
                    <option value="100">100개씩 보기</option>
                </select>
                <select name="SearchField" class="form-select" style="width: auto;" asp-for="SearchField" asp-items="Model.SearchFields"></select>
                <input type="text" name="SearchQuery" class="form-control" placeholder="검색어 입력..." asp-for="SearchQuery" style="width: 200px;" />
                <div class="form-check ms-2">
                    <input type="checkbox" class="form-check-input" asp-for="ReadyUserOnly" id="readyUserOnlyCheck" />
                    <label class="form-check-label" for="readyUserOnlyCheck">승인 선수만</label>
                </div>
                <button type="submit" class="btn btn-primary">검색</button>
                <a asp-page="./PlayerManagement" class="btn btn-secondary">초기화</a>
            </form>

            <div class="table-responsive mt-2">
                <table class="table my-0 table-striped table-hover table-modern">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>아이디</th>
                            <th>이름</th>
                            <th>상태</th>
                            <th>권한</th>
                            <th>등록일</th>
                            <th>관리</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Players != null && Model.Players.Any())
                        {
                            var rowNum = (Model.Players.PageIndex - 1) * Model.PageSize + 1;
                            @foreach (var user in Model.Players)
                            {
                                <tr>
                                    <td>@(rowNum++)</td>
                                    <td>@user.UserId</td>
                                    <td>@user.UserName</td>
                                    <td>@user.UserWClass</td>
                                    <td>@user.UserClass.ToRoleName()</td>
                                    <td>@user.UserRegistrationDate.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        <a asp-page="./EditPlayer" asp-route-id="@user.UserId" class="btn btn-sm btn-info">수정</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center text-muted p-4">
                                    ⚠️ 현재 조건에 맞는 선수가 없습니다.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.Players != null && Model.Players.TotalPages > 0)
            {
                <div class="row align-items-center mt-3">
                    <div class="col-md-4">
                        <p class="text-muted mb-0">
                            총 @Model.Players.TotalCount 명
                        </p>
                    </div>
                    @if (Model.Players.TotalPages > 1)
                    {
                        <div class="col-md-8 d-flex justify-content-end">
                            <nav aria-label="Page navigation">
                                <ul class="pagination mb-0">
                                    @{
                                        var prevDisabled = !Model.Players.HasPreviousPage ? "disabled" : "";
                                        <li class="page-item @prevDisabled">
                                            <a asp-page="./PlayerManagement"
                                               asp-route-PageIndex="@(Model.Players.PageIndex - 1)"
                                               asp-route-PageSize="@Model.PageSize"
                                               asp-route-SearchField="@Model.SearchField"
                                               asp-route-SearchQuery="@Model.SearchQuery"
                                               asp-route-ReadyUserOnly="@Model.ReadyUserOnly"
                                               class="page-link">
                                                이전
                                            </a>
                                        </li>
                                    }
                                    @for (var i = 1; i <= Model.Players.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == Model.Players.PageIndex ? "active" : "")">
                                            <a asp-page="./PlayerManagement"
                                               asp-route-PageIndex="@i"
                                               asp-route-PageSize="@Model.PageSize"
                                               asp-route-SearchField="@Model.SearchField"
                                               asp-route-SearchQuery="@Model.SearchQuery"
                                               asp-route-ReadyUserOnly="@Model.ReadyUserOnly"
                                               class="page-link">
                                                @i
                                            </a>
                                        </li>
                                    }
                                    @{
                                        var nextDisabled = !Model.Players.HasNextPage ? "disabled" : "";
                                        <li class="page-item @nextDisabled">
                                            <a asp-page="./PlayerManagement"
                                               asp-route-PageIndex="@(Model.Players.PageIndex + 1)"
                                               asp-route-PageSize="@Model.PageSize"
                                               asp-route-SearchField="@Model.SearchField"
                                               asp-route-SearchQuery="@Model.SearchQuery"
                                               asp-route-ReadyUserOnly="@Model.ReadyUserOnly"
                                               class="page-link">
                                                다음
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>