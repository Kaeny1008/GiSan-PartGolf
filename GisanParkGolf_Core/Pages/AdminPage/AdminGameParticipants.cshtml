@page
@model GiSanParkGolf.Pages.AdminPage.AdminGameParticipantsModel
@{
    ViewData["Title"] = "참가/취소 내역 관리";
}

@await Html.PartialAsync("Shared/Components/_HeaderCard", (ViewData["Title"] as string ?? "제목 없음", "대회별 참가자와 취소 내역을 확인, 검색, 관리할 수 있는 페이지입니다."))

<div class="container mt-4">
    <div class="custom-card">
        <!-- 검색/필터/보기갯수 컨트롤 -->
        @{
            var searchModel = new GisanParkGolf_Core.Pages.Shared.SearchControlModel
            {
                PageSize = Model.PageSize,
                SearchField = Model.SearchField,
                SearchQuery = Model.SearchQuery,
                ResetPageName = "./AdminGameParticipants",
                FieldOptions = new List<GisanParkGolf_Core.Pages.Shared.SearchFieldOption>
                {
                    new() { Value = "GameName", Text = "대회명" },
                    new() { Value = "UserId", Text = "참가자ID" },
                    new() { Value = "CancelledOnly", Text = "취소자만" }
                }
            };
        }
        @await Html.PartialAsync("_SearchControl", searchModel)

        <!-- 목록 테이블 -->
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th style="width:4rem">No</th>
                        <th>대회명</th>
                        <th>참가자ID</th>
                        <th>참가일</th>
                        <th>상태</th>
                        <th>취소일</th>
                        <th>취소사유</th>
                        <th>취소처리자</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Participants != null && Model.Participants.Any())
                    {
                        int no = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var p in Model.Participants)
                        {
                            <tr class="@(p.IsCancelled ? "table-danger" : "")">
                                <td>@(++no)</td>
                                <td class="text-nowrap">@p.Game?.GameName</td>
                                <td class="text-nowrap">@p.UserId</td>
                                <td class="text-nowrap">@p.JoinDate.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    @if (p.IsCancelled)
                                    {
                                        <span class="badge bg-danger">취소</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">참가</span>
                                    }
                                </td>
                                <td class="text-nowrap">@(p.CancelDate?.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>
                                <td>@(p.CancelReason ?? "-")</td>
                                <td>@(p.Approval ?? "-")</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center text-muted py-5">내역이 없습니다.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- 통계 요약 -->
        <div class="d-flex flex-wrap align-items-center gap-3 p-3 pb-0">
            <span>전체 참가내역: <span class="fw-bold">@Model.TotalCount</span></span>
            <span class="text-success">참가중: <span class="fw-bold">@Model.JoinedCount</span></span>
            <span class="text-danger">취소: <span class="fw-bold">@Model.CancelledCount</span></span>
        </div>

        <!-- 페이징 컨트롤 -->
        @{
            var pagemodel = new GisanParkGolf_Core.Pages.Shared.PaginationModel
            {
                PageIndex = Model.PageIndex,
                TotalPages = Model.TotalPages,
                GetPageUrl = i => Url.Page(
                "./AdminGameParticipants",
                null,
                new
                {
                    SearchField = Model.SearchField,
                    SearchQuery = Model.SearchQuery,
                    PageIndex = i,
                    PageSize = Model.PageSize
                }, null) ?? ""
            };
        }
        @await Html.PartialAsync("_Pagination", pagemodel)
    </div>
</div>