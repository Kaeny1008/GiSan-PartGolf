@page
@model GiSanParkGolf.Pages.AdminPage.AdminGameParticipantsModel
@{
    ViewData["Title"] = "참가/취소 내역 관리";
}

@await Html.PartialAsync("Shared/Components/_HeaderCard", (ViewData["Title"] as string ?? "제목 없음", "대회별 참가자와 취소 내역을 확인, 검색, 관리할 수 있는 페이지입니다."))

@section Scripts {
    <script>

    </script>
}

<div class="container mt-4">
    <div class="custom-card">
        <!-- 검색/필터/보기갯수 컨트롤 -->
        @{
            var searchModel = new GisanParkGolf_Core.Pages.Shared.SearchControlModel
            {
                PageSize = Model.PageSize,
                SearchField = Model.SearchField,
                SearchQuery = Model.SearchQuery,
                ResetPageName = "./AdminGameParticipants",
                FieldOptions = new List<GisanParkGolf_Core.Pages.Shared.SearchFieldOption>
                {
                    new() { Value = "GameName", Text = "대회명" },
                    new() { Value = "UserId", Text = "참가자ID" }
                },
                ShowCancelCheckbox = true,
                IsCancelRequestedChecked = Request.Query["IsCancelRequested"] == "true"
            };
        }
        @await Html.PartialAsync("_SearchControl", searchModel)

        <!-- 목록 테이블 -->
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th style="width:4rem">No</th>
                        <th>대회명</th>
                        <th>참가자ID</th>
                        <th>참가일</th>
                        <th>상태</th>
                        <th>취소일</th>
                        <th>취소사유</th>
                        <th>취소처리자</th>
                        <th>관리</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Participants != null && Model.Participants.Any())
                    {
                        int no = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var p in Model.Participants)
                        {
                            <tr class="@(p.IsCancelled ? "table-danger" : "")">
                                <td>@(++no)</td>
                                <td class="text-nowrap">@p.Game?.GameName</td>
                                <td class="text-nowrap">@p.UserId</td>
                                <td class="text-nowrap">@p.JoinDate.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>
                                    @if (p.IsCancelled)
                                    {
                                        <span class="badge bg-danger">취소</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">참가</span>
                                    }
                                </td>
                                <td class="text-nowrap">@(p.CancelDate?.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>
                                <td>@(p.CancelReason ?? "-")</td>
                                <td>@(p.Approval ?? "-")</td>
                                <td>
                                    @* 취소요청이면서 아직 처리 안 된 경우: "취소 승인" *@
                                    @if (p.IsCancelled && string.IsNullOrEmpty(p.Approval))
                                    {
                                        var modalId = $"approveCancelModal_{p.UserId}";
                                        <button type="button"
                                                class="btn btn-outline-danger btn-sm"
                                                data-bs-toggle="modal"
                                                data-bs-target="#@modalId">
                                            취소 승인
                                        </button>
                                        <!-- 모달 -->
                                        <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="approveCancelModalLabel_@p.UserId" aria-hidden="true">
                                            <div class="modal-dialog modal-dialog-centered">
                                                <form method="post" asp-page-handler="ApproveCancel" asp-route-id="@p.UserId" class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title fw-bold" id="approveCancelModalLabel_@p.UserId">취소 승인 확인</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p class="mb-2">
                                                            <span class="fw-bold text-danger">정말 이 참가자(@(p.User?.UserName ?? p.UserId))의 취소를 승인하시겠습니까?</span>
                                                        </p>
                                                        <div class="alert alert-warning mb-0" role="alert" style="font-size:0.95em;">
                                                            <span class="fw-bold">※ 경고:</span> 취소 승인할 경우 <span class="text-danger">참가자 임의의 재참가는 불가</span>합니다.
                                                        </div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                                        <button type="submit" class="btn btn-danger">승인</button>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    }
                                    @* 취소승인된 경우: "재참가" 버튼 *@
                                    else if (p.IsCancelled && !string.IsNullOrEmpty(p.Approval))
                                    {
                                        var rejoinModalId = $"rejoinModal_{p.UserId}";
                                        <button type="button"
                                                class="btn btn-outline-primary btn-sm"
                                                data-bs-toggle="modal"
                                                data-bs-target="#@rejoinModalId">
                                            재참가
                                        </button>
                                        <!-- 재참가 모달 -->
                                        <div class="modal fade" id="@rejoinModalId" tabindex="-1" aria-labelledby="rejoinModalLabel_@p.UserId" aria-hidden="true">
                                            <div class="modal-dialog modal-dialog-centered">
                                                <form method="post" asp-page-handler="Rejoin" asp-route-id="@p.UserId" class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title fw-bold" id="rejoinModalLabel_@p.UserId">재참가 확인</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p class="mb-2">
                                                            <span class="fw-bold text-primary">정말 이 참가자(@(p.User?.UserName ?? p.UserId))를 재참가 처리하시겠습니까?</span>
                                                        </p>
                                                        <div class="alert alert-info mb-0" role="alert" style="font-size:0.95em;">
                                                            <span class="fw-bold">※ 안내:</span> 재참가 처리 시 해당 참가자는 다시 대회에 참가하게 됩니다.
                                                        </div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                                        <button type="submit" class="btn btn-primary">재참가</button>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="8" class="text-center text-muted py-5">내역이 없습니다.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- 통계 요약 -->
        <div class="d-flex flex-wrap align-items-center gap-3 p-3 pb-0">
            <span>전체 참가내역: <span class="fw-bold">@Model.TotalCount</span></span>
            <span class="text-success">참가중: <span class="fw-bold">@Model.JoinedCount</span></span>
            <span class="text-danger">취소: <span class="fw-bold">@Model.CancelledCount</span></span>
        </div>

        <!-- 페이징 컨트롤 -->
        @{
            var pagemodel = new GisanParkGolf_Core.Pages.Shared.PaginationModel
            {
                PageIndex = Model.PageIndex,
                TotalPages = Model.TotalPages,
                GetPageUrl = i => Url.Page(
                "./AdminGameParticipants",
                null,
                new
                {
                    SearchField = Model.SearchField,
                    SearchQuery = Model.SearchQuery,
                    PageIndex = i,
                    PageSize = Model.PageSize
                }, null) ?? ""
            };
        }
        @await Html.PartialAsync("_Pagination", pagemodel)
    </div>
</div>