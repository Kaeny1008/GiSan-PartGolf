@page
@using GisanParkGolf_Core.Helpers
@using GisanParkGolf_Core.ViewModels.AdminPage
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Http
@model GiSanParkGolf.Pages.AdminPage.GameSetupModel
@{
    ViewData["Title"] = "인원 코스 및 배치";
    var activeTab = Model.Tab ?? "tab-info"; // 반드시 Model에서 받아야 함
    var gameCode = Model.GameCode;           // 필요하면 이렇게

    var isSelected = !string.IsNullOrEmpty(Request.Query["gameCode"]);
    var selectedGame = Model.Competitions.FirstOrDefault(c => c.GameCode == Request.Query["gameCode"]);
    var searchModel = new GisanParkGolf_Core.Pages.Shared.SearchControlModel
    {
        PageSize = Model.PageSize,
        PageSizeName = "PageSize",
        QueryName = "SearchQuery",
        SearchField = Model.SearchField,
        SearchQuery = Model.SearchQuery,
        ResetPageName = "./GameSetup",
        FieldOptions = new List<GisanParkGolf_Core.Pages.Shared.SearchFieldOption>
        {
            new() { Value = "GameName", Text = "대회명" },
            new() { Value = "GameHost", Text = "주최" },
            new() { Value = "StadiumName", Text = "경기장" }
        }
    };
    var pagemodel = new GisanParkGolf_Core.Pages.Shared.PaginationModel
    {
        PageIndex = Model.PageIndex,
        TotalPages = Model.Competitions?.TotalPages ?? 1,
        GetPageUrl = i => Url.Page(
            "./GameSetup",
            null,
            new
            {
                SearchField = Model.SearchField,
                SearchQuery = Model.SearchQuery,
                PageIndex = i,
                PageSize = Model.PageSize
            }, null) ?? ""
    };
    var participantSearchModel = new GisanParkGolf_Core.Pages.Shared.SearchControlModel
    {
        PageSize = Model.ParticipantPageSize,
        PageSizeName = "ParticipantPageSize",
        QueryName = "ParticipantSearchQuery",
        SearchField = Model.ParticipantSearchQuery ?? "UserName",
        SearchQuery = Model.ParticipantSearchQuery,
        ResetPageName = "./GameSetup",
        FieldOptions = new List<GisanParkGolf_Core.Pages.Shared.SearchFieldOption>
        {
            new() { Value = "UserName", Text = "이름" },
            new() { Value = "UserId", Text = "아이디" },
            new() { Value = "JoinId", Text = "참가코드" }
        }
    };
    var participantPageModel = new GisanParkGolf_Core.Pages.Shared.PaginationModel
    {
        PageIndex = Model.ParticipantPageIndex,
        TotalPages = Model.Participants?.TotalPages ?? 1,
        GetPageUrl = i => Url.Page(
            "./GameSetup",
            null,
            new
            {
                gameCode = Request.Query["gameCode"],
                ParticipantSearchQuery = Model.ParticipantSearchQuery,
                ParticipantPageIndex = i,
                ParticipantPageSize = Model.ParticipantPageSize,
                tab = "tab-info"
            }, null) ?? ""
    };
    var assignmentSearchModel = new GisanParkGolf_Core.Pages.Shared.SearchControlModel
    {
        PageSize = Model.AssignmentPageSize,
        PageSizeName = "AssignmentPageSize",
        QueryName = "AssignmentSearchQuery",
        SearchField = Model.AssignmentSearchQuery ?? "UserName",
        SearchQuery = Model.AssignmentSearchQuery,
        ResetPageName = "./GameSetup",
        FieldOptions = new List<GisanParkGolf_Core.Pages.Shared.SearchFieldOption>
        {
            new() { Value = "UserName", Text = "이름" },
            new() { Value = "UserId", Text = "아이디" },
            new() { Value = "JoinId", Text = "참가코드" }
        }
    };
    var assignmentPageModel = new GisanParkGolf_Core.Pages.Shared.PaginationModel
    {
        PageIndex = Model.AssignmentPageIndex,
        TotalPages = Model.Assignments?.TotalPages ?? 1,
        GetPageUrl = i => Url.Page(
            "./GameSetup",
            null,
            new
            {
                gameCode = Request.Query["gameCode"],
                AssignmentSearchQuery = Model.AssignmentSearchQuery,
                AssignmentPageIndex = i,
                AssignmentPageSize = Model.AssignmentPageSize,
                tab = "tab-result"
            }, null) ?? ""
    };

    var assignmentResultsJson = HttpContext.Session.GetString("AssignmentResults");
    var assignmentResults = !string.IsNullOrEmpty(assignmentResultsJson)
        ? JsonConvert.DeserializeObject<List<CourseAssignmentResultViewModel>>(assignmentResultsJson)
        : new List<CourseAssignmentResultViewModel>();

    var unassignedJson = HttpContext.Session.GetString("UnassignedParticipants");
    var unassigned = !string.IsNullOrEmpty(unassignedJson)
        ? JsonConvert.DeserializeObject<List<GisanParkGolf_Core.ViewModels.AdminPage.ParticipantViewModel>>(unassignedJson)
        : new List<GisanParkGolf_Core.ViewModels.AdminPage.ParticipantViewModel>();

    string? prevCourse = null;
    string? prevHole = null;
    int colorIdx = 0;
    var colorClasses = new[] { "bg-soft-a", "bg-soft-b" };
}

@section Scripts {
    <script>
        function validateCancelReason(textarea) {
            // 공백만 입력했을 때 막기
            if (!textarea.value.trim()) {
                textarea.classList.add('is-invalid');
            } else {
                textarea.classList.remove('is-invalid');
            }
        }

        // 모달 submit시 추가 검사
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.modal form').forEach(function(form) {
                form.addEventListener('submit', function(e) {
                    var textarea = form.querySelector('textarea[name="cancelReason"]');
                    if (textarea && !textarea.value.trim()) {
                        textarea.classList.add('is-invalid');
                        textarea.focus();
                        e.preventDefault();
                    }
                });
            });
        });
    </script>
}

@await Html.PartialAsync("Shared/Components/_HeaderCard", (
ViewData["Title"] as string ?? "제목 없음",
    "대회를 선택한 후, 배치 옵션을 설정하고 인원을 코스에 배치할 수 있습니다."
))

<div class="container mt-2">
    @if (!isSelected)
    {
        <!-- 대회 선택 패널(항상 보임) -->
        <div id="topPanel" class="mb-4">
            <div class="custom-card p-3 shadow-sm">
                <h4 class="card-title">대회 선택</h4>
                <p class="mb-2 text-muted">대회명을 클릭하여 세부정보를 확인하세요.</p>
                <div class="card-header py-3">
                    @await Html.PartialAsync("_SearchControl", searchModel)
                </div>
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0" id="gameTable">
                        <thead class="table-light">
                            <tr>
                                <th style="width:4rem">No</th>
                                <th>대회명</th>
                                <th>대회일자</th>
                                <th>상태</th>
                                <th>경기장</th>
                                <th>총 참가자</th>
                                <th>배치결과</th>
                                <th>선택</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Competitions != null)
                            {
                                @for (int i = 0; i < Model.Competitions.Count; i++)
                                {
                                    var comp = Model.Competitions[i];
                                    var assignedCount = comp.AssignmentCount; // 이 값은 VM에서 미리 계산
                                    var participantCount = comp.JoinedCount;  // 취소 안된 참가자 수
                                    <tr>
                                        <td>@(i + 1)</td>
                                        <td>@comp.GameName</td>
                                        <td>@comp.GameDate.ToString("yyyy-MM-dd")</td>
                                        <td>@GameStatusHelper.ToDisplay(comp.Status)</td>
                                        <td>@comp.StadiumName</td>
                                        <td>@comp.TotalParticipants</td>
                                        <td>
                                            @if (assignedCount < participantCount)
                                            {
                                                <span class="badge bg-danger">재배치 필요</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">배치 완료</span>
                                            }
                                        </td>
                                        <td>
                                            <a asp-page="./GameSetup"
                                               asp-route-gameCode="@comp.GameCode"
                                               class="btn btn-outline-primary btn-sm">선택</a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="7">대회 데이터가 없습니다.</td></tr>
                            }
                        </tbody>
                    </table>
                    @await Html.PartialAsync("_Pagination", pagemodel)
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- 대회 선택시만 표시 -->
        @if ((Model.Assignments?.Count ?? 0) < Model.JoinedCount)
        {
            <div class="alert alert-danger mt-3" role="alert">
                <i class="bi bi-exclamation-triangle me-1"></i>
                <strong>코스배치 누락 경고!</strong><br />
                배치대상 참가자 수: <span class="fw-bold">@Model.JoinedCount</span>명,
                코스배치 인원: <span class="fw-bold">@(Model.Assignments?.Count ?? 0)</span>명<br />
                <span class="text-danger">코스배치되지 않은 참가자가 있습니다. 반드시 코스배치를 다시 실행하세요!</span>
            </div>
        }
        <div id="bottomPanel">
            <div class="custom-card p-3 shadow-sm">
                <div class="mb-3 d-flex align-items-center">
                    <h4 class="card-title mb-0 flex-grow-1">대회 상세정보</h4>
                    <a asp-page="./GameSetup" class="btn btn-outline-success btn-sm">목록으로 이동</a>
                </div>
                <ul class="nav nav-tabs mb-3" id="gameSetupTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link @(activeTab == "tab-info" ? "active" : "")" data-bs-toggle="tab" href="#tab-info" role="tab">정보 및 참가자</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(activeTab == "tab-course" ? "active" : "")" data-bs-toggle="tab" href="#tab-course" role="tab">코스배치</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(activeTab == "tab-result" ? "active" : "")" data-bs-toggle="tab" href="#tab-result" role="tab">코스배치 결과 확인</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade @(activeTab == "tab-info" ? "show active" : "")" id="tab-info" role="tabpanel">
                        <div class="competition-detail-flex">
                            <!-- 대회 정보 카드 -->
                            <div class="competition-card-modern" style="flex: 0 0 340px; min-width: 280px; max-width:400px;">
                                <div class="competition-title-modern">@((selectedGame?.GameName) ?? "대회명")</div>
                                <div class="competition-divider"></div>
                                <dl class="competition-list">
                                    <dt>일자</dt>
                                    <dd>@((selectedGame?.GameDate.ToString("yyyy-MM-dd")) ?? "")</dd>
                                    <dt>상태</dt>
                                    <dd><span class="status-badge">@((GameStatusHelper.ToDisplay(selectedGame?.Status)) ?? "")</span></dd>
                                    <dt>참가자</dt>
                                    <dd>@(selectedGame?.TotalParticipants ?? 0)명 참가</dd>
                                    <dt>경기장</dt>
                                    <dd>@((selectedGame?.StadiumName) ?? "")</dd>
                                    <dt>주최자</dt>
                                    <dd>@((selectedGame?.GameHost) ?? "")</dd>
                                    <dt>방식</dt>
                                    <dd><span class="mode-badge">@((selectedGame?.PlayMode) ?? "")</span></dd>
                                    <dt>비고</dt>
                                    <dd>
                                        <div class="competition-note-modern">
                                            @(Html.Raw((selectedGame?.GameNote ?? "").Replace("\r\n", "<br>").Replace("\n", "<br>").Replace("\r", "<br>")))
                                        </div>
                                    </dd>
                                </dl>
                            </div>
                            <!-- 참가자 정보 카드 -->
                            <div class="participant-card-modern participant-wide">
                                <div class="participant-title">참가자 정보</div>
                                @await Html.PartialAsync("_SearchControl", participantSearchModel, new 
                                ViewDataDictionary(ViewData) {
                                    { "activeTab", "tab-info" },
                                    { "gameCode", gameCode }
                                })
                                <div class="table-responsive">
                                    <table class="table table-hover align-middle mb-0" id="participantTable">
                                        <thead class="table-light">
                                            <tr>
                                                <th style="width:4rem">No</th>
                                                <th>이름</th>
                                                <th>아이디</th>
                                                <th>참가일자</th>
                                                <th>참가상태</th>
                                                <th>관리</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.Participants != null)
                                            {
                                                for (int i = 0; i < Model.Participants.Count; i++)
                                                {
                                                    var p = Model.Participants[i];
                                                    <tr class="@(p.IsCancelled ? "table-danger" : "")">
                                                        <td>@((Model.Participants.PageIndex - 1) * Model.Participants.PageSize + i + 1)</td>
                                                        <td>@p.Name</td>
                                                        <td>@p.UserId</td>
                                                        <td>@p.JoinDateText</td>
                                                        <td>
                                                            @if (p.IsCancelled)
                                                            {
                                                                <span class="badge bg-danger">취소</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge bg-success">참가</span>
                                                            }
                                                        </td>
                                                        <td>
                                                            @* 취소요청이면서 아직 처리 안 된 경우: "취소 승인" *@
                                                            @if (p.IsCancelled && string.IsNullOrEmpty(p.Approval))
                                                            {
                                                                var modalId = $"approveCancelModal_{p.UserId}";
                                                                <button type="button"
                                                                        class="badge rounded-pill bg-danger border-0"
                                                                        style="font-size:0.88rem; padding:0.22em 0.75em; line-height:1.3; vertical-align:middle; min-height:1.7em;"
                                                                        data-bs-toggle="modal"
                                                                        data-bs-target="#@modalId">
                                                                    취소 승인
                                                                </button>
                                                                <!-- 모달 -->
                                                                <div class="modal fade" id="@modalId" tabindex="-1" aria-labelledby="approveCancelModalLabel_@p.UserId" aria-hidden="true">
                                                                    <div class="modal-dialog modal-dialog-centered">
                                                                        <form method="post" asp-page-handler="ApproveCancel" asp-route-id="@p.UserId" class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h5 class="modal-title fw-bold" id="approveCancelModalLabel_@p.UserId">취소 승인 확인</h5>
                                                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                                <p class="mb-2">
                                                                                    <span class="fw-bold text-danger">정말 이 참가자(@(p.Name ?? p.UserId))의 취소를 승인하시겠습니까?</span>
                                                                                </p>
                                                                                <div class="alert alert-warning mb-0" role="alert" style="font-size:0.95em;">
                                                                                    <span class="fw-bold">※ 경고:</span> 취소 승인할 경우 <span class="text-danger">참가자 임의의 재참가는 불가</span>합니다.
                                                                                </div>
                                                                            </div>
                                                                            <div class="modal-footer">
                                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                                                                <button type="submit" class="btn btn-danger">승인</button>
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            }
                                                            @* 취소승인된 경우: "재참가" 버튼 *@
                                                            else if (p.IsCancelled && !string.IsNullOrEmpty(p.Approval))
                                                            {
                                                                var rejoinModalId = $"rejoinModal_{p.UserId}";
                                                                <button type="button"
                                                                        class="badge rounded-pill bg-primary border-0"
                                                                        style="font-size:0.88rem; padding:0.22em 0.75em; line-height:1.3; vertical-align:middle; min-height:1.7em;"
                                                                        data-bs-toggle="modal"
                                                                        data-bs-target="#@rejoinModalId">
                                                                    재참가
                                                                </button>
                                                                <!-- 재참가 모달 -->
                                                                <div class="modal fade" id="@rejoinModalId" tabindex="-1" aria-labelledby="rejoinModalLabel_@p.UserId" aria-hidden="true">
                                                                    <div class="modal-dialog modal-dialog-centered">
                                                                        <form method="post" asp-page-handler="Rejoin" asp-route-id="@p.UserId" class="modal-content">
                                                                            <div class="modal-header">
                                                                                <h5 class="modal-title fw-bold" id="rejoinModalLabel_@p.UserId">재참가 확인</h5>
                                                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                                <p class="mb-2">
                                                                                    <span class="fw-bold text-primary">정말 이 참가자(@(p.Name ?? p.UserId))를 재참가 처리하시겠습니까?</span>
                                                                                </p>
                                                                                <div class="alert alert-info mb-0" role="alert" style="font-size:0.95em;">
                                                                                    <span class="fw-bold">※ 안내:</span> 재참가 처리 시 해당 참가자는 다시 대회에 참가하게 됩니다.
                                                                                </div>
                                                                            </div>
                                                                            <div class="modal-footer">
                                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                                                                <button type="submit" class="btn btn-primary">재참가</button>
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                    <!-- 통계 요약 -->
                                    <div class="d-flex flex-wrap align-items-center gap-3 p-3 pb-0">
                                        <span>전체 참가내역: <span class="fw-bold">@Model.TotalCount</span></span>
                                        <span class="text-success">참가중: <span class="fw-bold">@Model.JoinedCount</span></span>
                                        <span class="text-danger">취소: <span class="fw-bold">@Model.CancelledCount</span></span>
                                    </div>
                                    @await Html.PartialAsync("_Pagination", participantPageModel)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade @(activeTab == "tab-course" ? "show active" : "")" id="tab-course" role="tabpanel">
                        <div class="p-3">
                            <h5 class="mb-3 fw-bold">코스배치 옵션 선택</h5>
                            <form id="courseOptionForm" method="post" asp-page-handler="CourseAssignment">
                                <div class="row row-cols-1 row-cols-md-2 g-3 mb-3">
                                    <div class="col">
                                        <label class="form-label fw-semibold">핸디캡 적용</label>
                                        <div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="Handicapped" id="HandicapUse" value="true" @(Model.Handicapped == "true" ? "checked" : "")>
                                                <label class="form-check-label" for="HandicapUse">사용</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="Handicapped" id="HandicapNo" value="false" @(Model.Handicapped == "false" ? "checked" : "")>
                                                <label class="form-check-label" for="HandicapNo">미사용</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <label class="form-label fw-semibold">성별 구분</label>
                                        <div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="GenderSort" id="GenderSortUse" value="true" @(Model.GenderSort == "true" ? "checked" : "")>
                                                <label class="form-check-label" for="GenderSortUse">사용</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="GenderSort" id="GenderSortNo" value="false" @(Model.GenderSort == "false" ? "checked" : "")>
                                                <label class="form-check-label" for="GenderSortNo">미사용</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <label class="form-label fw-semibold">연령대 정렬<span class="text-danger small">(현재사용X)</span></label>
                                        <div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="AgeSort" id="AgeSortUse" value="true" disabled title="현재는 사용할 수 없습니다." @(Model.AgeSort == "true" ? "checked" : "")>
                                                <label class="form-check-label" for="AgeSortUse">사용</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="AgeSort" id="AgeSortNo" value="false" disabled title="현재는 사용할 수 없습니다." @(Model.AgeSort == "false" ? "checked" : "")>
                                                <label class="form-check-label" for="AgeSortNo">미사용</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <label class="form-label fw-semibold">수상경력 정렬<span class="text-danger small">(현재사용X)</span></label>
                                        <div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="AwardSort" id="AwardSortUse" value="true" disabled title="현재는 사용할 수 없습니다." @(Model.AwardSort == "true" ? "checked" : "")>
                                                <label class="form-check-label" for="AwardSortUse">사용</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="AwardSort" id="AwardSortNo" value="false" disabled title="현재는 사용할 수 없습니다." @(Model.AwardSort == "false" ? "checked" : "")>
                                                <label class="form-check-label" for="AwardSortNo">미사용</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-3">
                                    <input type="hidden" name="gameCode" value="@Request.Query["gameCode"]" />
                                    <button type="submit" class="btn btn-success">코스배치 시작</button>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="tab-pane fade @(activeTab == "tab-result" ? "show active" : "")" id="tab-result" role="tabpanel">
                        <div class="p-3">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="fw-bold mb-0">코스배치 결과 확인</h5>
                                <div>
                                    <button type="button" class="btn btn-primary" id="btnSaveResult" data-bs-toggle="modal" data-bs-target="#saveResultModal">결과저장</button>
                                    <button type="button" class="btn btn-outline-secondary" id="btnExportPdf" onclick="location.href='@Url.Page("./GameSetup", "ExportPdf", new { gameCode = Request.Query["gameCode"] })'">PDF로 출력</button>
                                </div>
                            </div>

                            <!-- 저장 확인 모달 -->
                            <div class="modal fade" id="saveResultModal" tabindex="-1" aria-labelledby="saveResultModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <form method="post" asp-page-handler="SaveAssignmentResult" class="modal-content">
                                        <input type="hidden" name="gameCode" value="@Request.Query["gameCode"]" />
                                        <input type="hidden" name="GenderSort" value="@Model.GenderSort" />
                                        <input type="hidden" name="Handicapped" value="@Model.Handicapped" />
                                        <input type="hidden" name="AgeSort" value="@Model.AgeSort" />
                                        <input type="hidden" name="AwardSort" value="@Model.AwardSort" />
                                        <div class="modal-header">
                                            <h5 class="modal-title fw-bold" id="saveResultModalLabel">결과 저장 확인</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p class="mb-2">정말 배치 결과를 저장하시겠습니까?</p>
                                            <div class="alert alert-warning" role="alert" style="font-size:0.95em;">
                                                <i class="bi bi-exclamation-triangle me-1"></i>
                                                <strong>저장된 데이터가 있다면 덮어씌어 집니다.</strong>
                                            </div>
                                            @if (unassigned != null && unassigned.Count > 0)
                                            {
                                                <div class="alert alert-warning" role="alert" style="font-size:0.95em;">
                                                    <i class="bi bi-exclamation-triangle me-1"></i>
                                                    <strong>미배정 인원이 <span class="text-danger">@unassigned.Count</span>명 있습니다.</strong><br />
                                                    그래도 저장할 수 있습니다.<br />
                                                    <span class="text-danger">※ 미배정 인원은 배치 결과에 포함되지 않습니다.</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                            <button type="submit" class="btn btn-primary">저장</button>
                                        </div>
                                    </form>
                                </div>
                            </div>

                            @await Html.PartialAsync("_SearchControl", assignmentSearchModel, new 
                            ViewDataDictionary(ViewData) {
                                { "activeTab", "tab-result" },
                                { "gameCode", gameCode }
                            })
                            <div class="table-responsive">
                                <table class="table table-bordered align-middle">
                                    <thead class="table-light">
                                        <tr>
                                            <th>No</th>
                                            <th>팀명</th>
                                            <th>코스명</th>
                                            <th>홀 번호</th>
                                            <th>순번</th>
                                            <th>참가자 이름</th>
                                            <th>아이디</th>
                                            <th>성별</th>
                                            <th>연령대</th>
                                            <th>핸디캡</th>
                                            <th>수상경력</th>
                                            <th>배치취소(참가취소)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Assignments != null && Model.Assignments.Count > 0)
                                        {
                                            @for (int no = 1; no <= Model.Assignments.Count; no++)
                                            {
                                                var row = Model.Assignments[no - 1];
                                                // 코스 또는 홀 변경될 때 색상 인덱스 변경
                                                if (row.CourseName != prevCourse || row.HoleNumber != prevHole)
                                                {
                                                    colorIdx = (colorIdx + 1) % colorClasses.Length;
                                                }
                                                prevCourse = row.CourseName;
                                                prevHole = row.HoleNumber;
                                                <tr>
                                                    <td class="@colorClasses[colorIdx]">@no</td>
                                                    <td class="@colorClasses[colorIdx]">@row.TeamNumber</td>
                                                    <td class="@colorClasses[colorIdx]">@row.CourseName</td>
                                                    <td class="@colorClasses[colorIdx]">@row.HoleNumber</td>
                                                    <td class="@colorClasses[colorIdx]">@row.CourseOrder</td>
                                                    <td class="@colorClasses[colorIdx]">@row.UserName</td>
                                                    <td class="@colorClasses[colorIdx]">@row.UserId</td>
                                                    <td class="@colorClasses[colorIdx]">@row.GenderText</td>
                                                    <td class="@colorClasses[colorIdx]">@row.AgeGroupText</td>
                                                    <td class="@colorClasses[colorIdx]">@row.HandicapValue</td>
                                                    <td class="@colorClasses[colorIdx]">
                                                        @if (row.AwardCount > 0)
                                                        {
                                                            <span class="badge bg-info text-dark">@row.AwardCount 건</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-muted">없음</span>
                                                        }
                                                    </td>
                                                    <td class="@colorClasses[colorIdx]">
                                                        <!-- 코스배치 취소 버튼 -->
                                                        <button type="button"
                                                                class="btn btn-danger btn-sm"
                                                                data-bs-toggle="modal"
                                                                data-bs-target="#cancelAssignmentModal_@row.UserId">
                                                            코스배치 취소
                                                        </button>

                                                        <!-- 취소 확인 & 사유 입력 모달 -->
                                                        <div class="modal fade" id="cancelAssignmentModal_@row.UserId" tabindex="-1" aria-labelledby="cancelAssignmentModalLabel_@row.UserId" aria-hidden="true">
                                                            <div class="modal-dialog modal-dialog-centered">
                                                                <form method="post" asp-page-handler="CancelAssignment" class="modal-content">
                                                                    <input type="hidden" name="gameCode" value="@Request.Query["gameCode"]" />
                                                                    <input type="hidden" name="userId" value="@row.UserId" />
                                                                    <div class="modal-header">
                                                                        <h5 class="modal-title fw-bold" id="cancelAssignmentModalLabel_@row.UserId">코스배치 취소 확인</h5>
                                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                                                                    </div>
                                                                    <div class="modal-body">
                                                                        <p class="mb-2">
                                                                            <span class="fw-bold text-danger">정말 <b>@row.UserName</b> 참가자의 코스배치를 취소하시겠습니까?</span>
                                                                        </p>
                                                                        <div class="mb-3">
                                                                            <label for="cancelReason_@row.UserId" class="form-label">취소 사유 입력 <span class="text-danger">*</span></label>
                                                                            <textarea class="form-control"
                                                                                id="cancelReason_@row.UserId"
                                                                                name="cancelReason"
                                                                                rows="2"
                                                                                required
                                                                                oninput="validateCancelReason(this)">참가자 요청</textarea>
                                                                            <div class="invalid-feedback">
                                                                                취소 사유를 반드시 입력해야 합니다.
                                                                            </div>
                                                                        </div>
                                                                        <div class="alert alert-warning mb-0" role="alert" style="font-size:0.95em;">
                                                                            취소 시 해당 참가자는 <span class="fw-bold text-danger">대회 참가가 취소</span>되며, 미배정 인원 목록에는 표시되지 않습니다.<br>
                                                                            취소된 참가자는 '참가자 정보' 탭에서 <span class="fw-bold">취소 상태</span>로 확인 및 재참가 처리할 수 있습니다.
                                                                        </div>
                                                                    </div>
                                                                    <div class="modal-footer">
                                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                                                                        <button type="submit" class="btn btn-danger">코스배치 취소</button>
                                                                    </div>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="10" class="text-center text-muted py-4">배치 결과 데이터가 없습니다.</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            @await Html.PartialAsync("_Pagination", assignmentPageModel)

                            @* 미배정 인원 + 강제 배정 폼 *@
                            @if (unassigned != null && unassigned.Count > 0)
                            {
                                <div class="alert alert-warning mt-3">
                                    <strong>미배정 인원 강제 배정</strong>
                                    <table class="table table-bordered align-middle mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th>이름</th>
                                                <th>성별</th>
                                                <th>아이디</th>
                                                <th>코스</th>
                                                <th>홀 번호</th>
                                                <th>강제 배정</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var u in unassigned)
                                            {
                                                <tr>
                                                    <form method="post" asp-page-handler="ForceAssignParticipant" class="form-inline">
                                                        <input type="hidden" name="gameCode" value="@Request.Query["gameCode"]" />
                                                        <input type="hidden" name="userId" value="@u.UserId" />
                                                    <td>@u.Name</td>
                                                    <td>@u.GenderText</td>
                                                    <td>@u.UserId</td>
                                                    <td>
                                                        <select name="courseName" class="form-select form-select-sm">
                                                            @foreach (var c in Model.Courses)
                                                            {
                                                                <option value="@c.CourseName">@c.CourseName</option>
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        <select name="holeNumber" class="form-select form-select-sm">
                                                            @for (int i = 1; i <= Model.MaxHoleNumber; i++)
                                                            {
                                                                <option value="@i">@i</option>
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        <button type="submit" class="btn btn-danger btn-sm">강제 배정</button>
                                                    </td>
                                                    </form>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }

                            <div class="alert alert-secondary mt-4" role="alert" style="font-size:0.95em;">
                                <i class="bi bi-info-circle me-1"></i>
                                배치 결과는 코스배치 실행 후 확인 가능합니다. <br />
                                <span class="text-danger">※ 참가자 정보나 옵션이 변경되면 재배치가 필요합니다.</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="faq" class="mt-4">
                    <div class="card card-body bg-light border-0">
                        <h6><i class="bi bi-question-circle me-1"></i>도움말 & 문의</h6>
                        <ul class="mb-1">
                            <li>목록으로 돌아가려면 위의 버튼을 누르세요.</li>
                            <li>기타 문의는 관리자에게 연락하세요.</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }
</div>